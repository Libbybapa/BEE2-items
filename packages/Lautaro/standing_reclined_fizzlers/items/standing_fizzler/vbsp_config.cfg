"Replacements"
	{
	"%TEMP%" "LAUTARO_STANDING_WALL_PILLAR_CLEAN_OVER"
	// Face IDs of the emitter-touching faces for each type, space-seperated.
	"%FACE_ID_SINGLE%" ""
	"%FACE_ID_BOTTOM%" ""
	"%FACE_ID_MIDDLE%" ""
	"%FACE_ID_TOP%" ""

	// Dummy instances used to add the template in.
	"%CAP_TESTER%" "instances/BEE2/temporary/lautaro/standing_fizzler/cap_tester.vmf"
	"%SEG%" "instances/BEE2/temporary/lautaro/standing_fizzler/segment.vmf"
	}

"Conditions"
	{
	"Condition"
		{
		// This instance just has the logic stuff, like the math_counter and logic_branch. It's commmon to all.
		"instance" "<ITEM_STANDING_FIZZLER>"
		// $cube_type defines the height:
		// 0 = 1-high
		// 1 = 2-high
		// 2 = 3-high
		// 3 = 4-high
		// 4 = 5-high

		// First, determine the color for each pillar.
		// If the floor tile underneath is present, use that. 
		// If not, check the side of the block we're attached to.
		// If that's not there either, use the tile on ourselves.
		"Result"
			{
			"TemplateBrush"
				{
				"ID" "LAUTARO_STANDING_WALL_PILLAR_PICKER"
				"pickerVars"
					{
					"color_pos" "$color_pos"
					"color_neg" "$color_neg"
					}
				}
			}

		// Depending on the cube type, run the special reshape
		// command with the emitter positions, then add segment
		// instances at each location.
		"Switch"
			{
			"Flag" "instvar"
			"$cube_type = 0"
				{
				"ReshapeFizzler"
					{
					"Up_axis" "0 0 1"
					"Segment" "0 -64 0;0 64 0"
					}
				"AddOverlay"
					{
					"File" "%SEG%"
					"Fixup"
						{
						"$vis_pos" "single_pos"
						"$vis_neg" "single_neg"
						"$uses_nodraw" "$uses_nodraw"
						}
					}
				}
			"$cube_type = 1"
				{
				"ReshapeFizzler"
					{
					"Up_axis" "0 0 1"
					"Segment" "0 -64 0;0 64 0"
					"Segment" "0 -64 128;0 64 128"
					}
				}
			"$cube_type = 2"
				{
				"ReshapeFizzler"
					{
					"Up_axis" "0 0 1"
					"Segment" "0 -64 0;0 64 0"
					"Segment" "0 -64 128;0 64 128"
					"Segment" "0 -64 256;0 64 256"
					}
				}
			"$cube_type = 3"
				{
				"ReshapeFizzler"
					{
					"Up_axis" "0 0 1"
					"Segment" "0 -64 0;0 64 0"
					"Segment" "0 -64 128;0 64 128"
					"Segment" "0 -64 256;0 64 256"
					"Segment" "0 -64 384;0 64 384"
					}
				}
			"$cube_type = 4"
				{
				"ReshapeFizzler"
					{
					"Up_axis" "0 0 1"
					"Segment" "0 -64 0;0 64 0"
					"Segment" "0 -64 128;0 64 128"
					"Segment" "0 -64 256;0 64 256"
					"Segment" "0 -64 384;0 64 384"
					"Segment" "0 -64 512;0 64 512"
					}
				}
			}
		// If uses_nodraw is set, use that for the sides.
		// Otherwise use black/white.
		"Condition"
			{
			"instvar" "$uses_nodraw"
			"Result"
				{
				"SetInstVar" "$face_mat tools/toolsnodraw"
				}
			"Else"
				{
				"SetInstVar" "$face_mat " // Empty string.
				}
			}

		// Figure out if we need the bottom mount points.	
		"Condition"
			{
			"BlockType"
				{
				"Offset" "0 1 1"
				"Type" "VOID AIR PIT GOO"
				}				
			"BlockType"
				{
				"Offset" "0 1 0"
				"Type" "VOID AIR PIT GOO"
				}
			"Result"
				{
				"TemplateBrush"
					{
					"ID" "%TEMP%:mount_pos"
					"colorVar" "$color_pos"
					}
				}
			}

		"Condition"
			{
			"BlockType"
				{
				"Offset" "0 -1 1"
				"Type" "VOID AIR PIT GOO"
				}				
			"BlockType"
				{
				"Offset" "0 -1 0"
				"Type" "VOID AIR PIT GOO"
				}	
			"Result"
				{
				"TemplateBrush"
					{
					"ID" "%TEMP%:mount_neg"
					"colorVar" "$color_neg"
					}
				}
			}

		// Then add the temporary segment instances.
		// First the bottom which is a special case.
		"Condition"
			{
			"Fixup" "$cube_type = 0"
			"Result"
				{
				// Special case, the one-high version.
				"AddOverlay"
					{
					"File" "%SEG%"
					"Fixup"
						{
						"$vis_pos" "single_pos"
						"$vis_neg" "single_neg"
						"$face_find" "#%FACE_ID_SINGLE%"
						"$face_rep" "$face_mat"
						"$color_pos" "$color_pos"
						"$color_neg" "$color_neg"
						}
					}
				}
			"Else"
				{
				"AddOverlay"
					{
					"File" "%SEG%"
					"Fixup"
						{
						"$vis_pos" "bottom_pos"
						"$vis_neg" "bottom_neg"
						"$face_find" "#%FACE_ID_BOTTOM%"
						"$face_rep" "$face_mat"
						"$color_pos" "$color_pos"
						"$color_neg" "$color_neg"
						}
					}
				}
			}

		// Then for the next 4, if topmost use that otherwise mid.
		// So add an initial instance to decide that, then do the template adding.
		"Condition"
			{
			"Fixup" "$cube_type >= 1"
			"Result"
				{
				"AddOverlay"
					{
					"File" "%CAP_TESTER%"
					"Offset" "0 0 128"
					"Fixup"
						{
						"$top_pos" "$cube_type"
						"$cur_pos" "1"
						"$face_rep" "$face_mat"
						"$color_pos" "$color_pos"
						"$color_neg" "$color_neg"
						}
					}
				}
			}
		"Condition"
			{
			"Fixup" "$cube_type >= 2"
			"Result"
				{
				"AddOverlay"
					{
					"File" "%CAP_TESTER%"
					"Offset" "0 0 256"
					"Fixup"
						{
						"$top_pos" "$cube_type"
						"$cur_pos" "2"
						"$face_rep" "$face_mat"
						"$color_pos" "$color_pos"
						"$color_neg" "$color_neg"
						}
					}
				}
			}
		"Condition"
			{
			"Fixup" "$cube_type >= 3"
			"Result"
				{
				"AddOverlay"
					{
					"File" "%CAP_TESTER%"
					"Offset" "0 0 384"
					"Fixup"
						{
						"$top_pos" "$cube_type"
						"$cur_pos" "3"
						"$face_rep" "$face_mat"
						"$color_pos" "$color_pos"
						"$color_neg" "$color_neg"
						}
					}
				}
			}
		"Condition"
			{
			"Fixup" "$cube_type = 4"
			"Result"
				{
				"AddOverlay"
					{
					"File" "%SEG%"
					"Offset" "0 0 512"
					"Fixup"
						{
						"$vis_pos"   "top_pos"
						"$vis_neg"   "top_neg"
						"$face_find" "#%FACE_ID_TOP%"
						"$face_rep"  "$face_mat"
						"$color_pos" "$color_pos"
						"$color_neg" "$color_neg"
						}
					}
				}
			}
		}

	"Condition"
		{
		"instance" "%CAP_TESTER%"
		"Condition"	
			{
			"$top_pos = $cur_pos"
			"Result"
				{
				"SetInstVar" "$vis_pos top_pos"
				"SetInstVar" "$vis_neg top_neg"
				"SetInstVar" "$face_find #%FACE_ID_TOP%"
				}
			"Else"
				{
				"SetInstVar" "$vis_pos top_pos"
				"SetInstVar" "$vis_neg top_neg"
				"SetInstVar" "$face_find #%FACE_ID_TOP%"
				}
			}
		"Result"
			{
			"ChangeInstance" "%SEG%"
			}
		}

	// Now finally add each segment in.
	"Condition"
		{
		"instance" "%SEG%"
		"Result"
			{
			// We don't stay around.
			"ChangeInstance" ""
			}

		// If the wall is actually present, don't add.
		"Condition"
			{
			"!posIsSolid"
				{
				"Pos" "0 64 -48"
				"Dir" "0 -1 0"
				"Type" "tile"
				}
			"!posIsSolid"
				{
				"Pos" "0 64 -16"
				"Dir" "0 -1 0"
				"Type" "tile"
				}
			"!posIsSolid"
				{
				"Pos" "0 64 16"
				"Dir" "0 -1 0"
				"Type" "tile"
				}
			"!posIsSolid"
				{
				"Pos" "0 64 48"
				"Dir" "0 -1 0"
				"Type" "tile"
				}
			"Result"
				{
				"TemplateBrush"
					{
					"ID" "%TEMP%:$vis_pos"
					"colorVar" "$color_pos"
					"Replace"
						{
						// Apply nodraw if requested.
						"$face_find" "$face_rep"
						}
					}
				}
			}


		"Condition"
			{
			"!posIsSolid"
				{
				"Pos" "0 -64 -48"
				"Dir" "0 1 0"
				"Type" "tile"
				}
			"!posIsSolid"
				{
				"Pos" "0 -64 -16"
				"Dir" "0 1 0"
				"Type" "tile"
				}
			"!posIsSolid"
				{
				"Pos" "0 -64 16"
				"Dir" "0 1 0"
				"Type" "tile"
				}
			"!posIsSolid"
				{
				"Pos" "0 -64 48"
				"Dir" "0 1 0"
				"Type" "tile"
				}
			"Result"
				{
				"TemplateBrush"
					{
					"ID" "%TEMP%:$vis_neg"
					"colorVar" "$color_neg"
					"Replace"
						{
						// Apply nodraw if requested.
						"$face_find" "$face_rep"
						}
					}
				}
			}
		}
	}
